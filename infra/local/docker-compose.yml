version: "3.9"
name: funds
services:
  postgres:
    image: postgres:15
    container_name: ff_postgres
    ports:
      - '5438:5432'
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
      - ./volumes/postgres/init/:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
    command:
      - postgres
      - -c
      - shared_preload_libraries=pg_stat_statements
      - -c
      - pg_stat_statements.track=all
      - -c
      - pg_stat_statements.max=25000

  kafka:
    image: bitnami/kafka:3.3.2
    container_name: ff_kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://ff_kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_MESSAGE_MAX_BYTES=20971520
      - KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES=20971520
    volumes:
      - ./volumes/kafka/data:/bitnami/kafka

  user-service:
    image: funds/user-service:latest
    container_name: ff_user
    ports:
      - '5247:5247'
    environment:
      - DATABASE_URL=jdbc:postgresql://ff_postgres:5432/ff_user
      - OTEL_COLLECTOR_GRPC_ENDPOINT=http://ff_otel_collector:4317/v1/traces
    depends_on:
      - postgres
      - otel-collector

  historical-pricing-service:
    image: funds/historical-pricing-service:latest
    container_name: ff_historical_pricing
    ports:
      - '5231:5231'
    environment:
      - DATABASE_URL=jdbc:postgresql://ff_postgres:5432/ff_historical_pricing
      - OTEL_COLLECTOR_GRPC_ENDPOINT=http://ff_otel_collector:4317/v1/traces
    depends_on:
      - postgres
      - otel-collector

  account-service:
    image: funds/account-service:latest
    container_name: ff_account
    ports:
      - '5211:5211'
    environment:
      - DATABASE_URL=jdbc:postgresql://ff_postgres:5432/ff_account
      - KAFKA_BOOTSTRAP_SERVERS=ff_kafka:9092
      - OTEL_COLLECTOR_GRPC_ENDPOINT=http://ff_otel_collector:4317/v1/traces
    depends_on:
      - postgres
      - kafka
      - otel-collector

  fund-service:
    image: funds/fund-service:latest
    container_name: ff_fund
    ports:
      - '5253:5253'
    environment:
      - DATABASE_URL=jdbc:postgresql://ff_postgres:5432/ff_fund
      - ACCOUNT_BASE_URL=http://ff_account:5211
      - KAFKA_BOOTSTRAP_SERVERS=ff_kafka:9092
      - OTEL_COLLECTOR_GRPC_ENDPOINT=http://ff_otel_collector:4317/v1/traces
    depends_on:
      - postgres
      - kafka
      - otel-collector

  import-service:
    image: funds/import-service:latest
    container_name: ff_import
    ports:
      - '5207:5207'
    environment:
      - ACCOUNT_BASE_URL=http://ff_account:5211
      - FUND_BASE_URL=http://ff_fund:5253
      - HISTORICAL_PRICING_BASE_URL=http://ff_historical_pricing:5231
      - DATABASE_URL=jdbc:postgresql://ff_postgres:5432/ff_import
      - KAFKA_BOOTSTRAP_SERVERS=ff_kafka:9092
      - OTEL_COLLECTOR_GRPC_ENDPOINT=http://ff_otel_collector:4317/v1/traces
    depends_on:
      - postgres
      - kafka
      - otel-collector

  reporting-service:
    image: funds/reporting-service:latest
    container_name: ff_reporting
    ports:
      - '5212:5212'
    environment:
      - FUND_BASE_URL=http://ff_fund:5253
      - HISTORICAL_PRICING_BASE_URL=http://ff_historical_pricing:5231
      - KAFKA_BOOTSTRAP_SERVERS=ff_kafka:9092
      - DATABASE_URL=jdbc:postgresql://ff_postgres:5432/ff_reporting
      - OTEL_COLLECTOR_GRPC_ENDPOINT=http://ff_otel_collector:4317/v1/traces
    depends_on:
      - postgres
      - kafka
      - otel-collector

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.128.0
    container_name: ff_otel_collector
    command: [ "--config", "/etc/otel-collector-config.yaml" ]
    volumes:
      - ./volumes/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - '4317:4317'  # OTLP gRPC
      - '4318:4318'  # OTLP HTTP
      - '55679:55679'  # ZPages for debugging
    depends_on:
      - tempo

  tempo:
    image: grafana/tempo:2.8.0
    container_name: ff_tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    ports:
      - '3100:3100'   # Tempo HTTP API / TraceQL
      - '9095:9095'   # Tempo gRPC API
      - '4417:4317'   # OTLP gRPC ingest
      - '4418:4318'   # OTLP HTTP ingest
    volumes:
      - ./volumes/tempo/tempo-config.yaml:/etc/tempo.yaml
      - ./volumes/tempo/data:/tmp/tempo

  grafana:
    image: grafana/grafana:12.0.1
    container_name: ff_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - tempo
    volumes:
      - ./volumes/grafana/data:/var/lib/grafana
