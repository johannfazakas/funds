[versions]
kotlin = "2.0.0"
# TODO(Johann) upgrade ktor
ktor = "2.3.12"
kotlinx-serialization = "1.6.3"
kotlinx-datetime = "0.6.0"
koin = "3.5.6"
postgres = "42.7.3"
flyway = "6.5.2"
exposed = "0.41.1"
kotlin-csv = "1.10.0"
kotlin-logging = "3.0.5"
logback = "1.4.14"
junit = "5.9.3"
junit-platform-launcher = "1.8.2"
assertj = "3.26.0"
kotlin-mockito = "5.4.0"
testcontainers = "1.19.8"
mockserver-client = "5.15.0"

[libraries]

# ktor
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# kotlinx
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

# ktor
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }

# db
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres" }
flyway = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }

# logging
kotlin-logging = { module = "io.github.microutils:kotlin-logging", version = "1.11.0" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# other libraries
kotlin-csv = { module = "com.jsoizo:kotlin-csv", version.ref = "kotlin-csv" }

# test libraries
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version = "junit-platform-launcher" }
ktor-server-tests-jvm = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
kotlin-mockito = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "kotlin-mockito" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-jdbc = { module = "org.testcontainers:jdbc", version.ref = "testcontainers" }
testcontainers-mockserver = { module = "org.testcontainers:mockserver", version.ref = "testcontainers" }
mockserver-client = { module = "org.mock-server:mockserver-client-java", version.ref = "mockserver-client" }

[bundles]

[plugins]
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
